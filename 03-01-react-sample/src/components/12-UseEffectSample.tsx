import { useState, useEffect } from 'react'

/** üìå useEffectÏôÄ useLayoutEffect - Î∂ÄÍ∞ÄÏûëÏö© ÌõÖ
 * Î∂ÄÍ∞ÄÏûëÏö©ÏùÄ Ïª¥Ìè¨ÎÑåÌä∏Ïùò Í∑∏Î¶¨Í∏∞ÏôÄÎäî ÏßÅÏ†ëÏ†ÅÏù∏ Í¥ÄÍ≥ÑÍ∞Ä ÏóÜÎäî Ï≤òÎ¶¨Î•º ÎßêÌï©ÎãàÎã§.
 * e.g. ÌôîÎ©¥ÏùÑ Í∑∏Î¶∞ DOMÏùò ÏàòÎèôÎ≥ÄÍ≤Ω, Î°úÍ∑∏Ï∂úÎ†•, ÌÉÄÏù¥Î®∏ ÏÑ§Ï†ï, Îç∞Ïù¥ÌÑ∞ Ï∑®Îìù Îì±
 */

// ÌÉÄÏù¥Î®∏Í∞Ä Ìò∏Ï∂úÎêòÎäî Ï£ºÍ∏∞Î•º 1Ï¥àÎ°ú ÌïúÎã§
const UPDATE_CYCLE = 1000

// localstorageÏóêÏÑú ÏÇ¨Ïö©ÌïòÎäî ÌÇ§
const KEY_LOCALE = 'KEY_LOCALE'

enum Locale {
  US = 'en-US',
  KO = 'ko-KR',
}

const getLocaleFromString = (text: string) => {
  switch (text) {
    case Locale.US:
      return Locale.US
    case Locale.KO:
      return Locale.KO
    default:
      return Locale.US
  }
}

const Clock = () => {
  const [timestamp, setTimestamp] = useState(new Date())
  const [locale, setLocale] = useState(Locale.US)

  /*** (1) ÌÉÄÏù¥Î®∏Î•º ÏÑ§Ï†ïÌïòÍ∏∞ ÏúÑÌïú Î∂ÄÍ∞ÄÏûëÏö©
   * setInterval()Î•º ÏÇ¨Ïö©Ìï¥, Ï£ºÍ∏∞Ï†ÅÏúºÎ°ú Ï≤òÎ¶¨Î•º Ïã§Ìñâ
   * Îî∞ÎùºÏÑú Ï¥àÍ∏∞Ìôî Ï≤òÎ¶¨Îäî Ï¥àÍ∏∞ Í∑∏Î¶¨Í∏∞ÏóêÏÑúÎßå ÏàòÌñâ
   *
   * useEffectÏùò ÎëêÎ≤àÏ®∞ Ïù∏ÏàòÎäî ÏùòÏ°¥Î∞∞Ïó¥Ïù¥Î©∞,
   * useCallback, useMemoÏôÄ ÎßàÏ∞¨Í∞ÄÏßÄÎ°ú Í∑∏Î¶¥ ÎñÑÎßàÎã§ ÎÇ¥Ïö©ÏùÑ ÌôïÏù∏Ìï¥ÏÑú,
   * Ïù¥Ï†ÑÏùò Í∑∏Î¶¨Í∏∞ ÎïåÏôÄ Îã§Î•º Í≤ΩÏö∞ÏóêÎßå Ï≤´ Î≤àÏ®∞ Ïù∏ÏàòÏùò Ìï®ÏàòÎ•º Ïã§ÌñâÌï©ÎãàÎã§.
   * Îπà Î∞∞ÏòÅÎ•¥ Ï†ÑÎã¨Ìï† Í≤ΩÏö∞, Ï¥àÍ∏∞ Í∑∏Î¶¨Í∏∞Î•º ÎßàÏπú ÏßÅÌõÑÏóêÎßå Ïã§ÌñâÎêòÎ©∞, Í∑∏ Îí§ Îã§Ïãú Í∑∏Î¶¥ ÎïåÎäî Ïã§ÌñâÎêòÏßÄ ÏïäÏäµÎãàÎã§.
   */
  useEffect(() => {
    // ÌÉÄÏù¥Î®∏ ÏÖã, setTimeout()ÏùÑ Ìò∏Ï∂úÌïòÍ≥† ÏÉÅÌÉúÎ•º 1Ï¥àÎßàÎã§ Îã§Ïãú Í∑∏Î¶¨Î©∞, ÌòÑÏû¨ ÏãúÍ∞Å ÌëúÏãúÎ•º ÏóÖÎç∞Ïù¥Ìä∏
    const timer = setInterval(() => {
      setTimestamp(new Date())
    }, UPDATE_CYCLE)

    /** ÌÅ¥Î¶∞ÏóÖ Ìï®ÏàòÎ•º Ï†ÑÎã¨ÌïòÍ≥†, Ïñ∏ÎßàÏö¥Ìä∏ ÏãúÏóê ÌÉÄÏù¥Î®∏Î•º Ìï¥Ï†úÌïúÎã§
     * Ïñ∏ÎßàÏö¥Ìä∏ ÏãúÏóê ÌÉÄÏù¥Î®∏Î•º Ìï¥Ï†úÌïòÏßÄ ÏïäÏúºÎ©¥, Î∂ÄÎ™® Ïª§Ìè¨ÎÑåÌä∏ÏóêÏÑú Clock Ïª§Ìè¨ÎÑåÌä∏ Ìò∏Ï∂úÌïòÏßÄ ÏïäÏïÑÎèÑ, ÌÉÄÏù¥Î®∏Í∞Ä Í≥ÑÏÜç ÎèôÏûëÌï©ÎãàÎã§.
     * Ïù¥Îäî Î≤ÑÍ∑∏ÎÇò Î©îÎ™®Î¶¨ ÎàÑÏàòÏùò ÏõêÏù∏ÎêòÎØÄÎ°ú, ÌÅ¥Î¶∞ÏóÖ Ìï®ÏàòÏóêÏÑú ÏïÑÎûòÏôÄ Í∞ôÏù¥ Ï≤òÎ¶¨Ìï¥Ï§òÏïº Îê©ÎãàÎã§.
     */
    return () => {
      clearInterval(timer)
    }
    // Ï¥àÍ∏∞ Í∑∏Î¶¨Í∏∞ ÏãúÏóêÎßå Ïã§ÌñâÌïúÎã§
  }, [])

  /*** (2) localstorageÎ°úÎ∂ÄÌÑ∞ Í∞íÏùÑ Î°úÎî©ÌïòÍ∏∞ ÏúÑÌïú Î∂ÄÍ∞ÄÏûëÏö©
   * Î°úÏª¨ Ïä§ÌÜ†Î¶¨ÏßÄ Ìï®ÏàòÎäî ÎèôÍ∏∞Ï†ÅÏúºÎ°ú Ïã§ÌñâÎêòÎ©∞, ÏùΩÍ∏∞,Ïì∞Í∏∞ Îç∞Ïù¥ÌÑ∞Í∞Ä Ïª§ÏßêÏóê Îî∞Îùº ÏãúÍ∞ÑÏù¥ Í±∏Î¶ΩÎãàÎã§.
   * Í∑∏Î¶¨Í∏∞ Ìï®Ïàò ÏïàÏóê ÏßÅÏ†ë Î°úÏª¨ Ïä§ÌÜ†Î¶¨ÏßÄÎ•º ÏÇ¨Ïö©ÌïòÎ©¥, Í∑∏Î¶¨Í∏∞Ïóê ÏßÄÏó∞Ïù¥ Î∞úÏÉùÌï©ÎãàÎã§.
   * Îî∞ÎùºÏÑú useEffect ÏïàÏóêÏÑú Î°úÏª¨ Ïä§ÌÜ†Î¶¨ÏßÄÎ•º ÏÇ¨Ïö©Ìï©ÎãàÎã§.
   */
  useEffect(() => {
    const savedLocale = localStorage.getItem(KEY_LOCALE)
    if (savedLocale !== null) {
      setLocale(getLocaleFromString(savedLocale))
    }
  }, [])

  /*** (3) localeÏù¥ Î∞îÎÄåÏóàÏùÑ Îïå, localstorageÏóê Í∞íÏùÑ Ï†ÄÏû•ÌïòÍ∏∞ ÏúÑÌïú Î∂ÄÍ∞ÄÏûëÏö©
   * Î°úÏª¨ Ïä§ÌÜ†Î¶¨ÏßÄÏóê Îç∞Ïù¥ÌÑ∞Î•º Ï†ÄÏû•Ìï©ÎãàÎã§.
   * ÌôîÎ©¥ÏùÑ Í∑∏Î¶¥ ÎñÑÎßàÎã§ Ï†ÄÏû•Ìï† ÌïÑÏöîÎäî ÏóÜÏúºÎ©∞, ÎìúÎ°≠Îã§Ïö¥ Î©îÎâ¥Î•º ÏÑ†ÌÉùÌï¥ localeÏù¥ ÏóÖÎç∞Ïù¥Ìä∏Îê† ÎñÑÎßå Ï†ÄÏû•ÌïòÎ©¥ ÎêòÎØÄÎ°ú,
   * ÏùòÏ°¥ Î∞∞Ïó¥Ïóê localeÏùÑ Ï†ÑÎã¨Ìï©ÎãàÎã§.
   *
   * Ï¶â, ÏùòÏ°¥ Î∞∞Ïó¥Ïóê localeÏùÑ Ï†ÑÎã¨ÌïòÍ≥†, localeÏù¥ Î≥ÄÌôîÌï† ÎïåÎßàÎã§ Ïã§ÌñâÌïòÎèÑÎ°ù ÌïúÎã§
   */
  useEffect(() => {
    localStorage.setItem(KEY_LOCALE, locale)
  }, [locale])

  return (
    <div>
      <p>
        <span id="current-time-label">ÌòÑÏû¨ ÏãúÍ∞Å</span>
        <span> : {timestamp.toLocaleString(locale)}‚è±Ô∏è</span>
        <select value={locale} onChange={e => setLocale(getLocaleFromString(e.target.value))}>
          <option value="en-US">en-US</option>
          <option value="ko-KR">ko=KR</option>
        </select>
      </p>
    </div>
  )
}

export default Clock
